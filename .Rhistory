maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Create swipe map with only basemap and classified map
leaflet(width = 1200, height = 600) %>%
setView(lng = -123.08, lat = 48.6, zoom = 16) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Create swipe map with only basemap and classified map
leaflet(width = 1200, height = 600) %>%
setView(lng = -123.08, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Create swipe map with only basemap and classified map
leaflet(width = 1200, height = 600) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Define class colors (hex or names)
landcover_colors <- c(
"Water" = "#4575b4",
"Coniferous Forest" = "#1a9850",
"Broadleaf Forest" = "#91cf60",
"Non-Forest Vegetation" = "#ffffbf",
"Exposed Soil" = "#fdae61",
"Low Density Developed" = "#d73027",
"High Density Developed" = "#a50026"
)
# Create swipe map with only basemap and classified map
leaflet(width = 1200, height = 600) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Add custom legend
addLegend(position = "topright",
colors = landcover_colors,
labels = names(landcover_colors),
title = "Land Cover Classes",
opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Define class colors (hex or names)
landcover_colors <- c(
"Water" = "#4575b4",
"Coniferous Forest" = "#1a9850",
"Broadleaf Forest" = "#91cf60",
"Non-Forest Vegetation" = "#ffffbf",
"Exposed Soil" = "#fdae61",
"Low Density Developed" = "#d73027",
"High Density Developed" = "#a50026"
)
# Create swipe map with only basemap and classified map
leaflet(width = 1200, height = 600) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Add custom legend
addLegend(position = "topright",
colors = landcover_colors,
labels = names(landcover_colors),
title = "Land Cover Classes",
opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Define class colors (hex or names)
landcover_colors <- c(
"Water" = "#4575b4",
"Coniferous Forest" = "#1a9850",
"Broadleaf Forest" = "#91cf60",
"Non-Forest Vegetation" = "#ffffbf",
"Exposed Soil" = "#fdae61",
"Low Density Developed" = "#d73027",
"High Density Developed" = "#a50026"
)
# Create swipe map with only basemap and classified map
leaflet(width = 1200, height = 800) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Add custom legend
addLegend(position = "topright",
colors = landcover_colors,
labels = names(landcover_colors),
title = "Land Cover Classes",
opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Define class colors (hex or names)
landcover_colors <- c(
"Water" = "violet",
"Coniferous Forest" = "#d73027",
"Broadleaf Forest" = "#a50026",
"Non-Forest Vegetation" = "cyan",
"Exposed Soil" = "#fdae61",
"Low Density Developed" = "#91cf60",
"High Density Developed" = "lightyellow"
)
# Create swipe map with only basemap and classified map
leaflet(width = 1200, height = 800) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Add custom legend
addLegend(position = "topright",
colors = landcover_colors,
labels = names(landcover_colors),
title = "Land Cover Classes",
opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
library(leaflet)
library(raster)
library(leaflet.extras2)
library(terra)
library(leafem)
library(mapview)
# Load classified raster (e.g., 2020 classification)
classified <- rast("C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab6/Lab 6 - Classification/Lab 6 - Classification/outputs/classified_map2.tif")
classified_r <- raster(classified)  # convert for leaflet
# Define class colors (hex or names)
landcover_colors <- c(
"Water" = "violet",
"Coniferous Forest" = "#d73027",
"Broadleaf Forest" = "#a50026",
"Non-Forest Vegetation" = "cyan",
"Exposed Soil" = "#fdae61",
"Low Density Developed" = "#91cf60",
"High Density Developed" = "lightyellow"
)
# Create swipe map with only basemap and classified map
leaflet(width = 1200, height = 800) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Add custom legend
addLegend(position = "topright",
colors = landcover_colors,
labels = names(landcover_colors),
title = "Land Cover Classes",
opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
knitr::opts_chunk$set(echo = TRUE)
if(!dir.exists("outputs")) dir.create("outputs", showWarnings = FALSE)
my_polygons <- "C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab6/Lab 6 - Classification/Lab 6 - Classification/data/classification_polygons_h2.shp"
library(tidyverse)
library(terra)
library(sf)
library(RStoolbox)
ls_image <- rast("C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab6/Lab 6 - Classification/Lab 6 - Classification/data/LC09_L2SP_047026_20240716_20240717_02_T1_SR_BSTACK.tif")
ls_image
terra::plotRGB(ls_image, r = 3, g = 2, b = 1, stretch = "lin")
class_poly <- st_read(my_polygons)
# Make sure that the geometry is valid
class_poly <- st_make_valid(class_poly)
# Tranform lc_class to factor
class_poly <- class_poly %>%
mutate(lc_class = factor(lc_class,
levels = c("Broadleaf Forest", "Coniferous Forest", "Exposed soil and rocks", "High density developed", "Low density developed", "Non-forest vegetation", "Water")))
# Plot
terra::plotRGB(ls_image, r = 3, g = 2, b = 1, stretch = "lin")
plot(class_poly[, "lc_class"], add = TRUE)
poly_summary <- class_poly %>%
st_drop_geometry() %>%
group_by(lc_class) %>%
summarize(n_poly = n())
poly_summary
# Assign a unique ID to each polygon
class_poly <- tibble::rowid_to_column(class_poly, var = "ID")
set.seed(1234)
# Sample 70% of the polygons in each land cover class
poly_train <- class_poly %>%
group_by(lc_class) %>%
sample_frac(0.7) %>%
mutate(set = "training") %>% st_cast(to = 'POLYGON')
# Use the ID field to select the polygons for validation
poly_val <- class_poly %>%
filter(!ID %in% poly_train$ID) %>%
mutate(set = "validation") %>% st_cast(to = 'POLYGON')
poly_set <- rbind(poly_train,
poly_val)
# Plot poly_set
plot(poly_set[, "set"], key.width = lcm(4))
poly_set_vals <- terra::extract(ls_image, vect(poly_set))
# We need to perform an inner_join to retrieve lc_class
poly_set_vals <- inner_join(poly_set, poly_set_vals) %>%
st_drop_geometry()
poly_set_vals
poly_stats <- poly_set_vals %>%
group_by(set, lc_class) %>%
summarize(n_px = n())
poly_stats
poly_set_vals_long <- pivot_longer(poly_set_vals,
blue:swir2,
names_to = "band",
values_to = "reflectance")
poly_set_vals_long
spectral_sign <- poly_set_vals_long %>%
group_by(lc_class, band) %>%
summarize(r_mean = mean(reflectance, na.rm = TRUE),
r_q05 = quantile(reflectance, 0.05, na.rm = TRUE),
r_q95 = quantile(reflectance, 0.95, na.rm = TRUE))
spectral_sign
# Wavelength corresponding to each band
bands_wavelength <- read_csv("C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab6/Lab 6 - Classification/Lab 6 - Classification/data/bands_wavelength.csv")
bands_wavelength
# Join wavelength
spectral_sign <- inner_join(spectral_sign, bands_wavelength)
# Graph
ggplot(spectral_sign, aes(x = wavelength, y = r_mean, group = 1)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = r_q05, ymax = r_q95), alpha = 0.2) +
facet_wrap(vars(lc_class)) +
theme_bw() +
labs(x = "Wavelength (nm)",
y = "Reflectance")
OA_unbalanced <- (900 + 5) / (1000 + 20)
OA_unbalanced
OA_balanced <- (18 + 5) / (20 + 20)
OA_balanced
set.seed(1234)
poly_train <- poly_train %>% rename(class = lc_class)
poly_val <- poly_val %>% rename(class = lc_class)
mlc_model <- superClass(img = ls_image,
trainData = poly_train,
valData = poly_val,
responseCol = "class",
model = "mlc",
nSamples = 500)
classified_map <- mlc_model$map
# Write the classified map as a tif file
terra::writeRaster(classified_map,
filename = "C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab6/Lab 6 - Classification/Lab 6 - Classification/outputs/classified_map2.tif",
overwrite = TRUE)
# Plot with colors
terra::plot(classified_map,
col = c('#A6D96A','#33A02C','#DE3B13','#D63CF1','#00D2D2','#F1A026','#2B83BA'))
# Validation df
val_preds <- mlc_model$validation$validationSamples
head(val_preds)
conf_matrix <- table(st_drop_geometry(val_preds[, c("prediction", "reference")]))
knitr::kable(conf_matrix)
# Calculate accuracy metrics here
#Overall accuracy
OA <- sum(diag(conf_matrix))/sum(conf_matrix)
#Producer accuracy
PA <- diag(conf_matrix)/colSums(conf_matrix)
#User accuracy
UA <- diag(conf_matrix)/rowSums(conf_matrix)
print(OA)
print(PA)
print(UA)
# Define class colors (hex or names)
landcover_colors <- c(
"Water" = "violet",
"Coniferous Forest" = "#d73027",
"Broadleaf Forest" = "#a50026",
"Non-Forest Vegetation" = "cyan",
"Exposed Soil" = "#fdae61",
"Low Density Developed" = "#91cf60",
"High Density Developed" = "lightyellow"
)
# Create swipe map with only basemap and classified map
l1 <- leaflet(width = 1200, height = 800) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Add custom legend
addLegend(position = "topright",
colors = landcover_colors,
labels = names(landcover_colors),
title = "Land Cover Classes",
opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Define class colors (hex or names)
landcover_colors <- c(
"Water" = "violet",
"Coniferous Forest" = "#d73027",
"Broadleaf Forest" = "#a50026",
"Non-Forest Vegetation" = "cyan",
"Exposed Soil" = "#fdae61",
"Low Density Developed" = "#91cf60",
"High Density Developed" = "lightyellow"
)
# Create swipe map with only basemap and classified map
l1 <- leaflet(width = 1200, height = 800) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Add custom legend
addLegend(position = "topright",
colors = landcover_colors,
labels = names(landcover_colors),
title = "Land Cover Classes",
opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
# Define class colors (hex or names)
landcover_colors <- c(
"Water" = "violet",
"Coniferous Forest" = "#d73027",
"Broadleaf Forest" = "#a50026",
"Non-Forest Vegetation" = "cyan",
"Exposed Soil" = "#fdae61",
"Low Density Developed" = "#91cf60",
"High Density Developed" = "lightyellow"
)
# Create swipe map with only basemap and classified map
l1 <- leaflet(width = 1200, height = 800) %>%
setView(lng = -123.1, lat = 48.6, zoom = 11) %>%  # Set center and zoom
# Define left and right panes
addMapPane("left", zIndex = 2) %>%
addMapPane("right", zIndex = 1) %>%
# Add basemap to both panes (split for swipe functionality)
addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
options = pathOptions(pane = "left")) %>%
addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
options = pathOptions(pane = "right")) %>%
# Add the classified map to one of the panes (right)
addRasterImage(classified, group = "Classified Map",
maxBytes = 10 * 1024 * 1024,
options = pathOptions(pane = "right"), opacity = 1) %>%
# Add custom legend
addLegend(position = "topright",
colors = landcover_colors,
labels = names(landcover_colors),
title = "Land Cover Classes",
opacity = 1) %>%
# Swipe control using pane layer IDs
addSidebyside(
layerId = "sidecontrols",
leftId = "baseid_left",
rightId = "Classified Map",  # show classified over basemap
options = list(padding = 0)
) %>%
addScaleBar(position = "bottomleft")
l1
