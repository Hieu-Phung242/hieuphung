# Load library
library(leaflet)
library(sf)
library(htmlwidgets)
# Load shapefile
kwahu_bound <- st_read("C:\Users\hphung.stu\OneDrive - UBC\Documents\GitHub\hieuphung\files\final_project/AOI_Kwahu_South.shp")
# Load shapefile
kwahu_bound <- st_read("C:/Users/hphung.stu/OneDrive - UBC/Documents/GitHub/hieuphung/files/final_project/AOI_Kwahu_South.shp")
# Load library
library(leaflet)
library(sf)
library(htmlwidgets)
# Load shapefile
kwahu_bound <- st_read("C:/Users/hphung.stu/OneDrive - UBC/Documents/GitHub/hieuphung/files/final_project/AOI_Kwahu_South.shp")
# Load shapefile
kwahu_bound <- st_read("C:/Users/hphung.stu/OneDrive - UBC/Documents/GitHub/hieuphung/files/final_project/AOI_Kwahu_South.shp")
# Load library
library(leaflet)
library(sf)
library(htmlwidgets)
# Load shapefile
kwahu_boundary <- st_read("C:/Users/hphung.stu/OneDrive - UBC/Documents/GitHub/hieuphung/files/final_project/AOI_Kwahu_South.shp")
# Create a leaflet map
m <- leaflet() %>%
addProviderTiles("Esri.WorldImagery") %>%
#add kwahu_boundary
addPolygons(
data = kwahu_boundary,
color = "green",
weight = 2,
fillOpacity = 0.5,
group = "AOI_boundary") %>%
#add layer control
addLayersControl(
baseGroups = c("Esri World Imagery"),
overlayGroups = c("kwahu_boundary"),
options = layersControlOptions(collapsed = FALSE)
) %>%
#add legend
addLegend(
position = "bottomright",
colors = c("red"),
labels = c("kwahu_boundary"),
title = "Legend",
opacity = 1
) %>%
#add scale bar
addScaleBar(position = c("bottomleft"))
# Save as an interactive HTML file
saveWidget(m, "interactive_map.html", selfcontained = TRUE)
# Create a leaflet map
m <- leaflet() %>%
addProviderTiles("Esri.WorldImagery") %>%
#add kwahu_boundary
addPolygons(
data = kwahu_boundary,
color = "red",
weight = 2,
fillOpacity = 0.2,
group = "AOI_boundary") %>%
#add legend
addLegend(
position = "bottomright",
colors = c("red"),
labels = c("Kwahu South District"),
title = "Legend",
opacity = 1
) %>%
#add scale bar
addScaleBar(position = c("bottomleft"))
# Save as an interactive HTML file
saveWidget(m, "interactive_map.html", selfcontained = TRUE)
# Load library
library(leaflet)
library(sf)
library(htmlwidgets)
library(leaflet.extras2)   # for addSidebyside
library(raster)            # to load GeoTIFF
library(leafem)            # to visualize raster in leaflet
# Load your AGB GeoTIFF
agb_l9 <- raster("C:/Users/hphung.stu/OneDrive - UBC/Documents/GitHub/hieuphung/files/final_project/Biomass_prediction_L9_2.tif")
# Load your AGB GeoTIFF
agb_l9 <- raster("C:/Users/hphung.stu/OneDrive - UBC/Documents/GitHub/hieuphung/files/final_project/Biomass_prediction_L9_2.tif")
# Create the leaflet map
leaflet(width = 700, height = 600) %>%
# Create two map panes
addMapPane("right", zIndex = 1) %>%
addMapPane("left",  zIndex = 2) %>%
# Add Esri basemap (on right)
addProviderTiles("Esri.WorldImagery", layerId = "base_right",
options = pathOptions(pane = "right")) %>%
# Add AGB raster (on left)
addRasterImage(agb, layerId = "agb_layer",
opacity = 0.8,
project = TRUE,   # reproject to match leaflet CRS
options = pathOptions(pane = "left")) %>%
# Add swipe slider between the layers
addSidebyside(layerId = "side_slider",
rightId = "base_right",
leftId  = "agb_layer")
# Create the leaflet map
leaflet(width = 700, height = 600) %>%
# Create two map panes
addMapPane("right", zIndex = 1) %>%
addMapPane("left",  zIndex = 2) %>%
# Add Esri basemap (on right)
addProviderTiles("Esri.WorldImagery", layerId = "base_right",
options = pathOptions(pane = "right")) %>%
# Add AGB raster (on left)
addRasterImage(agb, layerId = "agb_layer",
opacity = 0.8,
project = TRUE,   # reproject to match leaflet CRS
options = pathOptions(pane = "left")) %>%
# Add swipe slider between the layers
addSidebyside(layerId = "side_slider",
rightId = "base_right",
leftId  = "agb_layer")
leaflet(width = 700, height = 600) %>%
addMapPane("right", zIndex = 1) %>%
addMapPane("left",  zIndex = 2) %>%
# Add Esri basemap (on right)
addProviderTiles("Esri.WorldImagery", layerId = "base_right",
options = pathOptions(pane = "right")) %>%
# Create the leaflet map
leaflet(width = 700, height = 600) %>%
# Create two map panes
addMapPane("right", zIndex = 1) %>%
addMapPane("left",  zIndex = 2) %>%
# Add Esri basemap (on right)
addProviderTiles("Esri.WorldImagery", layerId = "base_right",
options = pathOptions(pane = "right")) %>%
# Add AGB raster (on left)
addRasterImage(agb_l9, layerId = "agb_layer",
opacity = 0.8,
project = TRUE,   # reproject to match leaflet CRS
options = pathOptions(pane = "left")) %>%
# Add swipe slider between the layers
addSidebyside(layerId = "side_slider",
rightId = "base_right",
leftId  = "agb_layer")
# Create color palette
agb_pal <- colorNumeric(
palette = c("#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#006837"),
domain = values(agb_l9),
na.color = "transparent"
)
# Create the leaflet map
leaflet(width = 700, height = 600) %>%
# Create two map panes
addMapPane("right", zIndex = 1) %>%
addMapPane("left",  zIndex = 2) %>%
# Add Esri basemap (on right)
addProviderTiles("Esri.WorldImagery", layerId = "base_right",
options = pathOptions(pane = "right")) %>%
# Add AGB raster (on left)
addRasterImage(agb_l9, layerId = "agb_layer",
opacity = 1,
project = TRUE,   # reproject to match leaflet CRS
color = agb_pal,
options = pathOptions(pane = "left")) %>%
# Add swipe slider between the layers
addSidebyside(layerId = "side_slider",
rightId = "base_right",
leftId  = "agb_layer") %>%
addLegend(pal = agb_pal,
values = values(agb_l9),
title = "AGB (Mg/ha)",
position = "bottomright")
# Create color palette
agb_pal <- colorNumeric(
palette = c("#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#006837"),
domain = values(agb_l9),
na.color = "transparent"
)
# Create the leaflet map
leaflet(width = 700, height = 600) %>%
# Create two map panes
addMapPane("right", zIndex = 1) %>%
addMapPane("left",  zIndex = 2) %>%
# Add Esri basemap (on right)
addProviderTiles("Esri.WorldImagery", layerId = "base_right",
options = pathOptions(pane = "right")) %>%
# Add AGB raster (on left)
addRasterImage(agb_l9, layerId = "agb_layer",
opacity = 0,
project = TRUE,   # reproject to match leaflet CRS
color = agb_pal,
options = pathOptions(pane = "left")) %>%
# Add swipe slider between the layers
addSidebyside(layerId = "side_slider",
rightId = "base_right",
leftId  = "agb_layer") %>%
addLegend(pal = agb_pal,
values = values(agb_l9),
title = "AGB (Mg/ha)",
position = "bottomright")
# Create color palette
agb_pal <- colorNumeric(
palette = c("#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#006837"),
domain = values(agb_l9),
na.color = "transparent"
)
# Create the leaflet map
leaflet(width = 700, height = 600) %>%
# Create two map panes
addMapPane("right", zIndex = 1) %>%
addMapPane("left",  zIndex = 2) %>%
# Add Esri basemap (on right)
addProviderTiles("Esri.WorldImagery", layerId = "base_right",
options = pathOptions(pane = "right")) %>%
# Add AGB raster (on left)
addRasterImage(agb_l9, layerId = "agb_layer",
opacity = 2,
project = TRUE,   # reproject to match leaflet CRS
color = agb_pal,
options = pathOptions(pane = "left")) %>%
# Add swipe slider between the layers
addSidebyside(layerId = "side_slider",
rightId = "base_right",
leftId  = "agb_layer") %>%
addLegend(pal = agb_pal,
values = values(agb_l9),
title = "AGB (Mg/ha)",
position = "bottomright")
# Create color palette (yellow to green, like your PNG)
agb_pal <- colorNumeric(
palette = c("#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#006837"),
domain = values(agb_l9),
na.color = "transparent"
)
# Create a leaflet map
m2 <- leaflet() %>%
addProviderTiles("Esri.WorldImagery") %>%
#add AGB raster
addRasterImage(
data = agb_l9,
color = agb_pal,
opacity = 0.8,
project = TRUE,
layerID = "AGB") %>%
# Add AGB legend
addLegend(
position = "bottomleft",
pal = agb_pal,
values = values(agb_l9),
title = "AGB (Mg/ha)"
) %>%
# Add scale bar
addScaleBar(position = "bottomleft")
# Create color palette (yellow to green, like your PNG)
agb_pal <- colorNumeric(
palette = c("#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#006837"),
domain = values(agb_l9),
na.color = "transparent"
)
# Create a leaflet map
m2 <- leaflet() %>%
addProviderTiles("Esri.WorldImagery") %>%
#add AGB raster
addRasterImage(
data = agb_l9,
colors = agb_pal,
opacity = 0.8,
project = TRUE) %>%
# Add AGB legend
addLegend(
position = "bottomleft",
pal = agb_pal,
values = values(agb_l9),
title = "AGB (Mg/ha)"
) %>%
# Add scale bar
addScaleBar(position = "bottomleft")
# Create color palette (yellow to green, like your PNG)
agb_pal <- colorNumeric(
palette = c("#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#006837"),
domain = values(agb_l9),
na.color = "transparent"
)
# Create a leaflet map
m2 <- leaflet() %>%
addProviderTiles("Esri.WorldImagery") %>%
#add AGB raster
addRasterImage(
agb_l9,
colors = agb_pal,
opacity = 0.8,
project = TRUE) %>%
# Add AGB legend
addLegend(
position = "bottomleft",
pal = agb_pal,
values = values(agb_l9),
title = "AGB (Mg/ha)"
) %>%
# Add scale bar
addScaleBar(position = "bottomleft")
# Save as an interactive HTML file
saveWidget(m2, "interactive_map2.html", selfcontained = TRUE)
agb_pal <- colorNumeric(
palette = c("#ffffcc", "#c2e699", "#78c679", "#31a354", "#006837", "#54278f"),
domain = values(agb_l9),
na.color = "transparent"
)
# Create a leaflet map
m2 <- leaflet() %>%
addProviderTiles("Esri.WorldImagery") %>%
#add AGB raster
addRasterImage(
agb_l9,
colors = agb_pal,
opacity = 0.8,
project = TRUE) %>%
# Add AGB legend
addLegend(
position = "bottomleft",
pal = agb_pal,
values = values(agb_l9),
title = "AGB (Mg/ha)"
) %>%
# Add scale bar
addScaleBar(position = "bottomleft")
# Save as an interactive HTML file
saveWidget(m2, "interactive_map2.html", selfcontained = TRUE)
