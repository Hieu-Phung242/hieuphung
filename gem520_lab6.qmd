---
title: "Image Classification using R"
format: html
editor: visual
code-fold: true
---

## Applied Skills

<div style="display: flex; flex-wrap: wrap; gap: 0.5rem; margin-bottom: 1.5rem;">

<span style="background-color: #1f3c73; color: white; padding: 0.5rem 1rem; border-radius: 0.5rem;">R Coding</span>

<span style="background-color: #1f3c73; color: white; padding: 0.5rem 1rem; border-radius: 0.5rem;">QGIS</span>

<span style="background-color: #1f3c73; color: white; padding: 0.5rem 1rem; border-radius: 0.5rem;">Supervised Classification</span>

</div>


::: panel-tabset
## Background

Image classification is a fundamental task in remote sensing used to extract meaningful information from satellite imagery.  By assigning each pixel in an image to a specific land cover class (e.g., forest, water, urban, agriculture), classification allows us to analyze spatial patterns, monitor environmental changes over time, and support decision-making in fields like urban planning, agriculture, forestry, and conservation.

## Objectives

- Classifying the raw Landsat 9 image into different land cover class by using supervised classification method

## Data descriptions

- Landsat 9 data (including 6 bands)

## References


:::

The Landsat 9 satellite image shows the Southern Gulf Island, BC. The result of classification can be seen in the swiped map below.

```{r, echo = FALSE, warning = FALSE, message = FALSE, results = "hide"}

library(leaflet)
library(raster)
library(leaflet.extras2)
library(terra)
library(leafem)
library(mapview)

```

```{r, echo = FALSE, warning = FALSE, message = FALSE, results = "hide"}
# Load your TIF files
landsat <- rast("C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab6/Lab 6 - Classification/Lab 6 - Classification/data/LC09_L2SP_047026_20240716_20240717_02_T1_SR_BSTACK.tif")
classified <- rast("C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab6/Lab 6 - Classification/Lab 6 - Classification/outputs/classified_map2.tif")
```


```{r, echo = FALSE, warning = FALSE, message = FALSE, results = "hide"}
terra::plotRGB(landsat, r = 3, g = 2, b = 1, stretch = "lin")
terra::plot(classified,
            col = c('#A6D96A','#33A02C','#DE3B13','#D63CF1','#00D2D2','#F1A026','#2B83BA'))

terra::plot(landsat)
```


```{r, echo = FALSE, warning = FALSE, message = FALSE, results = "hide"}
# Optional: Normalize or convert to RGB if needed
landsat_rgb <- landsat[[c(4,3,2)]]  # for natural color composite (adjust if needed)

# Create leaflet slider comparison
leaflet(width = 600, height = 600) %>%
  
  # Define two custom panes
  addMapPane("left", zIndex = 410) %>%
  addMapPane("right", zIndex = 420) %>%
  
  # Add basemaps to each pane
  addProviderTiles("Esri.WorldImagery", options = pathOptions(pane = "right")) %>%
  
  # Add classified map to right pane
  addRasterImage(classified, group = "Classified Map",
                 options = pathOptions(pane = "right")) %>%
  
   #allow for layers to be toggles on/off by adding them to the layers control
  addLayersControl(overlayGroups = "Classified Map") %>%
  
  #add slider control
  addSidebyside(layerId = "sidecontrols",
                rightId = "Classified Map",
                options = list(padding = 0)) %>%
  
  # Add the swipe control
  addSidebyside(layerId = "sidecontrols", 
                rightId = "Classified Map",
                options = list(padding = 0)) %>%
  
  # Optional: add scale bar
  addScaleBar(position = "bottomleft")

```

```{r}

# Load classified raster (e.g., 2020 classification)
classified <- rast("C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab6/Lab 6 - Classification/Lab 6 - Classification/outputs/classified_map2.tif")
classified_r <- raster(classified)  # convert for leaflet

# Create swipe map with only basemap and classified map
leaflet(width = 600, height = 600) %>%
  
  # Define left and right panes
  addMapPane("left", zIndex = 2) %>%
  addMapPane("right", zIndex = 1) %>%
  
  # Add basemap to both panes (split for swipe functionality)
  addProviderTiles("Esri.WorldImagery", group = "Basemap-Left", layerId = "baseid_left",
                   options = pathOptions(pane = "left")) %>%
  addProviderTiles("Esri.WorldImagery", group = "Basemap-Right", layerId = "baseid_right",
                   options = pathOptions(pane = "right")) %>%
  
  # Add the classified map to one of the panes (right)
  addRasterImage(classified, group = "Classified Map",
                 maxBytes = 10 * 1024 * 1024,
                 options = pathOptions(pane = "right"), opacity = 1) %>%
  
  # Swipe control using pane layer IDs
  addSidebyside(
    layerId = "sidecontrols",
    leftId = "baseid_left",
    rightId = "Classified Map",  # show classified over basemap
    options = list(padding = 0)
  ) %>%
  
  addScaleBar(position = "bottomleft")
```


