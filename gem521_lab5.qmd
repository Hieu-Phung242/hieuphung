---
title: "Individual Trees Detecting using different methods"
format: html
editor: visual
code-fold: true
---

## Applied Skills

<div style="display: flex; flex-wrap: wrap; gap: 0.5rem; margin-bottom: 1.5rem;">

<span style="background-color: #1f3c73; color: white; padding: 0.5rem 1rem; border-radius: 0.5rem;">R Coding</span>

<span style="background-color: #1f3c73; color: white; padding: 0.5rem 1rem; border-radius: 0.5rem;">ITD using Point Cloud</span>

<span style="background-color: #1f3c73; color: white; padding: 0.5rem 1rem; border-radius: 0.5rem;">ITD using CHM Derived Model</span>

<span style="background-color: #1f3c73; color: white; padding: 0.5rem 1rem; border-radius: 0.5rem;">Handling LiDAR Data</span>

</div>

::: panel-tabset
## Background

The Malcolm Knapp Research Forest (MKRF) is a 5,157-hectare forest located in Maple Ridge, British Columbia, approximately 60 km from Vancouver (The University of British Columbia, n.d.). Established in 1949, it serves as a world-class environment for research and education in forestry and sciences (The University of British Columbia, n.d.).

Individual tree detection (ITD) is a crucial technique in forest inventory and management for subsequent estimation of tree species, height, diameter, crown size and location (Luo et al., n.d). In this task, I am doing ITD using point cloud method and canopy height model derived method. The methods used in this tasks are based on Li et al., 2012 and Dalponte & Coomes, 2016.

## Objectives

- Applied point cloud method for individual tree detection (ITD) (Li et al., 2012)

- Applied canopy height model derived method for individual tree detection (ITD) (Dalponte and Coomes, 2016)

## Data descriptions

-   LiDAR point cloud data

## References

Dalponte, M., & Coomes, D. A. (2016). Tree-centric mapping of forest carbon density from airborne laser scanning and hyperspectral data. Methods in Ecology and Evolution, 7(10), 1236-1245.

Li, W., Guo, Q., Jakubowski, M. K., & Kelly, M. (2012). A new method for segmenting individual trees from the lidar point cloud. Photogrammetric Engineering & Remote Sensing, 78(1), 75-84.

Luo, Z., Zhang, Z., Li, W., Chen, Y., Wang, C., Nurunnabi, A., & Li, J. (n.d). Detection of individual trees in UAV LiDAR point clouds using a deep learning framework based on multi-channel representation. IEEE Transactions on Geoscience and Remote Sensing, 59(7), 5769-5785.

The University of British Columbia. (n.d). Malcolm Knapp Reseach Forest. https://www.mkrf.forestry.ubc.ca/about/
:::


Necessary pakages for this analysis 

```{r, echo = TRUE, warning = FALSE, message = FALSE}
library(lidR)
library(terra)
library(tidyverse)
library(rgl)

```


```{r, echo = FALSE, warning = FALSE, message = FALSE}
# Explore the plots
Lab5_Plot_1 <- readLAS("C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/Lab5_Plots/Lab5_Plot_1.las")

```

## Detect individual trees using a point cloud

The individual tree detection (ITD) method developed by Li et al. (2012) segments trees directly from LiDAR point cloud data without relying on intermediate raster products like canopy height models. This top-down, region-growing approach begins by identifying the highest point in the cloud, assumed to be a tree top, and sequentially classifies neighboring points based on 2D spatial distance, adaptive spacing thresholds, and tree shape characteristics. By leveraging the 3D structure of the forest, the algorithm effectively distinguishes individual trees even in complex, overlapping canopies. 

```{r, echo = TRUE, warning = FALSE, message = FALSE, results = "hide"}

#segment trees using li2012 algorithm 
segmented_plot_1 <- segment_trees(Lab5_Plot_1, li2012(dt1 = 1.5, 
                                                      dt2 = 2, 
                                                      R = 2, 
                                                      Zu = 15, 
                                                      speed_up = 10, 
                                                      hmin = 2))


```
Figure 1. ITD using Li et al. 2012 method

```{r, echo = FALSE, warning = FALSE, message = FALSE, results = "hide"}
library(htmlwidgets)

# Open a 3D rendering window for Li et al.2012
open3d()
plot(segmented_plot_1, color = "treeID")
rglwidget_obj_1 <- rglwidget()
saveWidget(rglwidget_obj_1, file = "interactive_plot_li.html", selfcontained = TRUE)
```


::: {html}
<iframe src="interactive_plot_li.html" width="100%" height="600px">

</iframe>

:::


## Detect individual trees using a CHM

Dalponte and Coomes (2016) developed a tree-centric approach for individual tree detection (ITD) using canopy height models (CHMs) derived from airborne laser scanning. Their method identifies individual tree crowns by detecting local maxima in the CHM, then applies a region-growing algorithm to delineate tree boundaries based on vertical height differences. Each delineated crown is used to extract tree height and crown area, from which stem diameter and aboveground biomass are estimated using species-specific allometric equations. Hyperspectral imagery aids in tree species classification, enabling more accurate wood density assignment. This CHM-based ITD framework enables high-resolution carbon density mapping, though it is limited in detecting small understory trees hidden beneath the canopy.

```{r, echo = FALSE, warning = FALSE, message = FALSE, fold = TRUE}
# Create CHM for plot 1 using pitfree algorithm
chm_plot1 <- rasterize_canopy(Lab5_Plot_1,
                              res = 0.5,
                              algorithm = pitfree(thresholds = c(0, 10, 20, 30),
                                                  subcircle = 0.2,
                                                  max_edge = c(0, 1)))

```


```{r, echo = FALSE, warning = FALSE}
# Locate tree tops using lmf algorithm
tree_tops <- locate_trees(chm_plot1,
                          lmf(ws = 5, hmin = 2))

```

Figure 2. ITD using Dalponte and Coomes 2016 method

```{r}
# Using Dalponte and Coomes 2016 algorithm to detect individual trees
tree_crowns_plot1 <- segment_trees(Lab5_Plot_1, dalponte2016(chm_plot1, 
                                                             tree_tops,
                                                             th_tree = 2,
                                                             th_seed = 0.45,
                                                             th_cr = 0.55,
                                                             max_cr = 10,
                                                             ID = "treeID"))

```


```{r, echo = FALSE, warning = FALSE, message = FALSE, results = "hide"}

library(htmlwidgets)

# Open a 3D rendering window for Dalponte and Coomes, 2016

open3d()
plot(tree_crowns_plot1, color = "treeID")
rglwidget_obj_2 <- rglwidget()
saveWidget(rglwidget_obj_2, file = "interactive_plot_dalponte.html", selfcontained = TRUE)


```

::: {html}
Download Static Map: <a href="files/Lab3_map.pdf" download> <button>Download</button> </a>
:::

